-----------Epsilon-----------
part 1)

part I

max_value=2147483647

While command used
my max is =2147483647

for command used

my max is =2147483647

 do while command

my max is =2147483647

part II

INT_MIN

min_value=-2147483648

 While command used
my min is =-2147483648

 for command used

my min is =-2147483648

 do while command used

my min is =-2147483648

part III

Machien epsilon

 The double epsilon is 2.22045e-16

my double machine epsilon is 2.22045e-16 when using a while command
my double machine epsilon is 2.22045e-16 when using a for loop
my double machine epsilon is 2.22045e-16 when using a do while loop

The float epsilon is 0.000000

my float machine epsilon is 1.19209e-07 when using a while loop
my float machine epsilon is 1.19209e-07 when using a for loop
my float machine epsilon is 1.19209e-07 when using a do while loop

The long double epsilon is 1.0842e-19

my long double machine epsilon is 1.0842e-19 when using a while loop
my long double machine epsilon is 2.1684e-19 when using a for loop
my long double machine epsilon is 1.0842e-19 when using a do while loop


Part 2 - up and down sum


the sum up float  is 15.403683

the sum down float is 16.686031

THe difference comes from the fact the first steps of the down flaot will be so 
small that it won't surpase that epsilon limit 
and will not register as changing.
The sum up part on the other hand will grow quickly at the beginning but 
at a certain point the additions will also be too small 
for it to register.

the sum of 1/n is famously known for being divergent, but it will comverge for max as max is a finite point.
the sum up double is 16.6953
the sum down double is 16.6953

THe machine epsilon for double is really really small and since I only do 1e+07 steps the steps don't get samml enough to be ignored 
The reason why I only use 1e+07 steps and not more is because the time to run the code began to get really long.

Part 3

I have implemented an equal command in equal.c 
and will now test it on two examples

equal(4,5,1,0.5)=1
1 means that it is within the relative equallity

equal(4,10,1,0.5)=0
0 means that it is within the relative equallity

part 4
We test it with whether or not it can recognize 5
It returns:
 five

It could. YEASSSS!!!!!
